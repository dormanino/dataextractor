    def treeca(plant, source):
        complete_line = ''
        data_source = []
        curent_reg = ''
        bm = ''
        data_type = ''
        kg = ''
        none_flag = False
        lines_list = source

        for line_counter, line_info_dict in enumerate(lines_list):
            line = line_info_dict['data']
            if line is not None:
                register_char = line[1]
                if register_char is '_' and line_counter is not 0:  # start of register
                    if line != curent_reg and not none_flag:
                        data_source.append((bm, data_type, kg, complete_line))
                        complete_line = ''
                    else:
                        bm = line_info_dict['bm']
                        data_type = line_info_dict['data_type']
                        kg = line_info_dict['kg']
                        none_flag = False
                        complete_line = ''
                    curent_reg = line
                complete_line += line
                bm = line_info_dict['bm']
                data_type = line_info_dict['data_type']
                kg = line_info_dict['kg']
            else:
                data_source.append((bm, data_type, kg, complete_line))
                bm = line_info_dict['bm']
                data_source.append((bm, None, None, None))
                none_flag = True
                continue

        slices = {
            1: {
                'part_number': (3, 21),
                'es1': (21, 25),
                'es2': (26, 30),
                'pos': (32, 35),
                'str': (36, 39),
                'aa': (40, 42),
                'l': (43, 45),
                'r': (46, 47),
                'li': (47, 49),
                'hws': (51, 55),
                'bza': (55, 61),
                'aesa': (64, 68),
                'menge': (69,78),
                'da':(78,80)
            },
            2: {
                'benennung': (4, 39),
                'b': (39, 40),
                'w': (41, 42),
                'em-ab': (45, 51),
                'em-bis': (56, 62),
                't_a': (66, 72),
                't_b': (74, 79)
            },
            3: {
                'aesb': (4, 8),
                'kem-ab': (9, 23),
                'kem-bis': (24, 38),
                'ehm': (39, 42),
                'ag': (43, 45),
                'pf': (46, 48),
                'vh': (49, 51),
                'abs': (52, 56),
                'rfme': (57, 64),
                'fz-a': (65, 72),
                'fz-b': (73, 80)
            },
            4: {
                'ma': (38, 55)
            }
        }